events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    upstream century-backend {
        server century-backend:8080;
    }
    # upstream century-backend {
    #     server century-backend-1:8080;
    #     server century-backend-2:8080;
    #     server century-backend-3:8080;
    # }
    
    # Nginx 로그를 표준 출력 및 표준 에러로 전송
    access_log /dev/stdout;
    error_log /dev/stderr info; # error_log 레벨은 필요에 따라 조정 (debug, info, notice, warn, error, crit, alert, emerg)

    server {
        listen 80;
        server_name localhost century20.mep.run.place;
        
        
        location /nginx_status {
            stub_status;
            # allow 127.0.0.1;
            # allow 프로메테우스ip;
            # deny all;
            allow all; 
        }
        # access_log 와 error_log 를 server 블록 내에 두면 해당 서버에만 적용됩니다.
        # http 블록에 두면 모든 server 블록에 기본값으로 적용됩니다.
        # access_log /dev/stdout;
        # error_log /dev/stderr;

        location / {
            root   /usr/share/nginx/html;
            index  index.html;
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            proxy_pass http://century-backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, X-HTTP-Method-Override, Cache-Control, X-File-Size, X-File-Name, X-File-Type, X-File-Extension, X-Upload-Content-Type, X-Upload-Content-Length';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, X-HTTP-Method-Override, Cache-Control, X-File-Size, X-File-Name, X-File-Type, X-File-Extension, X-Upload-Content-Type, X-Upload-Content-Length';
        }

        location /swagger-ui/ {
            proxy_pass http://century-backend/swagger-ui/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;

            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, X-HTTP-Method-Override, Cache-Control';
        }
        location /v3/api-docs {
            proxy_pass http://century-backend/v3/api-docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header 'Access-Control-Allow-Origin' '*';
        }
    }
}
